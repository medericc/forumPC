generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  topics    Topic[]  @relation("UserTopics")
  replies   Reply[]  @relation("UserReplies")
  likes     Like[]   @relation("UserLikes")
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  topics    Topic[]
}

model Topic {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  createdAt   DateTime   @default(now())
  author      User       @relation("UserTopics", fields: [authorId], references: [id])
  authorId    String     @db.ObjectId
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String     @db.ObjectId
  replies     Reply[]
}

model Reply {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdAt   DateTime   @default(now())
  author      User       @relation("UserReplies", fields: [authorId], references: [id])
  authorId    String     @db.ObjectId
  topic       Topic      @relation(fields: [topicId], references: [id])
  topicId     String     @db.ObjectId
  likes       Like[]
}

model Like {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  user        User       @relation("UserLikes", fields: [userId], references: [id])
  userId      String     @db.ObjectId
  reply       Reply      @relation(fields: [replyId], references: [id])
  replyId     String     @db.ObjectId
}
